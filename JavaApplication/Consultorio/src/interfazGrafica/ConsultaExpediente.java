package interfazGrafica;

import javax.swing.table.DefaultTableModel;
import interfazDeConexion.AccesoReporte;
import java.util.Collection;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import terapeuta.Reporte;
/**
 *
 * @author Sarahi
 */
public class ConsultaExpediente extends javax.swing.JFrame {

    /**
     * Creates new form consul
     */
    public ConsultaExpediente() {
        initComponents();
        this.setTitle("Consultas de información.");
        this.setIconImage((new ImageIcon(getClass().getResource("/imagenes/icono.jpg")).getImage()));
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        imprExpediente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hsesion = new javax.swing.JTable();
        buscar = new javax.swing.JButton();
        reporteSesion = new javax.swing.JButton();
        nexp = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bcon.png"))); // NOI18N

        imprExpediente.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        imprExpediente.setText("Extraer Expediente");
        imprExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprExpedienteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        jLabel2.setText("Numero de Expediente");

        hsesion.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        hsesion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID. Sesion", "No. de Expediente", "Nombre", "No. de Sesión", "Fecha de Sesión", "Tipo de Servicio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hsesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hsesionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(hsesion);
        if (hsesion.getColumnModel().getColumnCount() > 0) {
            hsesion.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        buscar.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        reporteSesion.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        reporteSesion.setText("Extraer Reporte");
        reporteSesion.setEnabled(false);
        reporteSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteSesionActionPerformed(evt);
            }
        });

        nexp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(584, 584, 584)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nexp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(reporteSesion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imprExpediente))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar)
                    .addComponent(jLabel2)
                    .addComponent(nexp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imprExpediente)
                    .addComponent(reporteSesion))
                .addGap(103, 103, 103))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Busca los reportes de sesión que coinciden con el identificador especificado
    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        try {
            AccesoReporte acceso = new AccesoReporte();
            if(! acceso.expedienteAsignado(acceso.obtenerIdentificadorDeTerapeuta(InicioSesion.identificadorUsuario), (Integer)this.nexp.getValue())){
                JOptionPane.showMessageDialog(null, "No se puede obtener acceso a ese paciente.");
                return;
            }
            buscarReportes();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConsultaExpediente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarActionPerformed

    //Muestra el expediente seleccionado
    private void imprExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprExpedienteActionPerformed
        try {
            AccesoReporte acceso = new AccesoReporte();
            if(! acceso.expedienteAsignado(acceso.obtenerIdentificadorDeTerapeuta(InicioSesion.identificadorUsuario), (Integer)this.nexp.getValue())){
                JOptionPane.showMessageDialog(null, "No se puede obtener acceso a ese paciente.");
                return;
            }
            reporteexpediente.Expediente ex = new reporteexpediente.Expediente("192.168.1.100", "Aplicacion", "postgres", "$@Lud1n73gral");
            ex.imprimir((Integer)this.nexp.getValue());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConsultaExpediente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_imprExpedienteActionPerformed

    //Muestra el reporte de sesión seleccionado
    private void reporteSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteSesionActionPerformed
        try {
            AccesoReporte acceso = new AccesoReporte();
            if(! acceso.expedienteAsignado(acceso.obtenerIdentificadorDeTerapeuta(InicioSesion.identificadorUsuario), (Integer)this.nexp.getValue())){
                JOptionPane.showMessageDialog(null, "No se puede obtener acceso a ese paciente.");
                return;
            }
            reportesesion.Sesion ses = new reportesesion.Sesion("192.168.1.100", "Aplicacion", "postgres", "$@Lud1n73gral");
            Integer seleccionado = (Integer)hsesion.getValueAt(hsesion.getSelectedRow(), 0);
            ses.imprimir(seleccionado);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ConsultaExpediente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reporteSesionActionPerformed

    //Habilita los botones que permiten mostrar los reportes
    private void hsesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hsesionMouseClicked
        reporteSesion.setEnabled(true);
        imprExpediente.setEnabled(true);
    }//GEN-LAST:event_hsesionMouseClicked

    /**
     * @param args the command line arguments
     */
    //Busca los reportes que coincidan con el identificador especificado  y los añade a la tabla principal
    public void buscarReportes() throws ClassNotFoundException {
        reporteSesion.setEnabled(false);
        //imprExpediente.setEnabled(false);
        ((DefaultTableModel)this.hsesion.getModel()).setRowCount(0);
        AccesoReporte accesoReporte = new AccesoReporte();
        int id_expediente = (Integer)this.nexp.getValue();
        if(id_expediente < 1){
            JOptionPane.showMessageDialog(null, "Ingrese un número válido de expediente.");
            return;
        }
        Collection<Reporte> resultadosDeBusqueda = accesoReporte.obtenerReportes(accesoReporte.obtenerIdentificadorDeTerapeuta(InicioSesion.identificadorUsuario), id_expediente);
        Reporte nuevaFila;
        Iterator<Reporte> iterador = resultadosDeBusqueda.iterator();
        DefaultTableModel modelo = (DefaultTableModel)this.hsesion.getModel();
        modelo.setRowCount(0);
        while(iterador.hasNext()) {
            nuevaFila = iterador.next();
            modelo.addRow(nuevaFila.obtenerValores());
        }
        
        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaExpediente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JTable hsesion;
    private javax.swing.JButton imprExpediente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner nexp;
    private javax.swing.JButton reporteSesion;
    // End of variables declaration//GEN-END:variables
}
