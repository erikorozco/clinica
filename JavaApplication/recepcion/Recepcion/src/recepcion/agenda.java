/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package recepcion;

import backend.recepcionDAO;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.util.Collection;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sarahi
 */
public class agenda extends javax.swing.JFrame {

    public Integer iridian,iridian2;
    public String tablaAgenda;
    Date fechaAmodificar;
    String horajt="";
    String fechajt=null;
 
    int z=-1;
    public agenda() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagen/Diapositiva10.PNG")).getImage());
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Agenda");
        extraer.setEnabled(false);
        agenda1.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        agenda = new com.toedter.calendar.JCalendar();
        busag = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        idter1 = new javax.swing.JTextField();
        horacmbx = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        ober = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaexp = new javax.swing.JTable();
        salir = new javax.swing.JButton();
        agenda1 = new javax.swing.JButton();
        tercmbx = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        extraer = new javax.swing.JButton();
        agendar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        agentera1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        citastera = new javax.swing.JTable();
        agenda2 = new com.toedter.calendar.JCalendar();
        terapeutatxt = new javax.swing.JTextField();
        horacmbx1 = new javax.swing.JComboBox();
        eliminar = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/agenda2.jpg"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agendar cita", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("EngraversGothic BT", 1, 24))); // NOI18N

        agenda.setBackground(new java.awt.Color(93, 183, 121));
        agenda.setFont(new java.awt.Font("EngraversGothic BT", 1, 18)); // NOI18N

        busag.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        busag.setText("Buscar");
        busag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busagActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("EngraversGothic BT", 1, 18)); // NOI18N
        jLabel3.setText("Expediente");

        idter1.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        idter1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idter1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idter1KeyTyped(evt);
            }
        });

        horacmbx.setFont(new java.awt.Font("Gautami", 1, 12)); // NOI18N
        horacmbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8:30 AM", "8:45 AM", "9:00 AM", "9:15 AM", "9:30 AM", "9:45 AM", "10:00 AM", "10:15 AM", "10:30 AM", "10:45 AM", "11:00 AM", "11:15 AM", "11:30 AM", "11:45 AM", "12:00 PM", "12:15 PM", "12:30 PM", "12:45 PM", "1:00 PM", "1:15 PM", "1:30 PM", "1:45 PM", "2:00 PM", "2:15 PM", "2:30 PM", "2:45 PM", "3:00 PM", "3:15 PM", "3:30 PM", "3:45 PM", "4:00 PM", "4:15 PM", "4:30 PM", "4:45 PM", "5:00 PM", "5:15 PM", "5:30 PM", "5:45 PM", "6:00 PM", "6:15 PM", "6:30 PM", "6:45 PM", "7:00 PM", "7:15 PM", "7:30 PM" }));

        ober.setColumns(20);
        ober.setFont(new java.awt.Font("Gautami", 1, 12)); // NOI18N
        ober.setRows(5);
        ober.setBorder(javax.swing.BorderFactory.createTitledBorder("Observaciones"));
        jScrollPane3.setViewportView(ober);

        tablaexp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EXPEDIENTE", "No. PERSONA", "NOMBRE", "APELLIDOS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaexp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaexpMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaexp);

        salir.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        agenda1.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        agenda1.setText("Agendar");
        agenda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agenda1ActionPerformed(evt);
            }
        });

        tercmbx.setFont(new java.awt.Font("Gautami", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idter1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busag)))
                .addGap(31, 31, 31)
                .addComponent(horacmbx, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tercmbx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(agenda, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(agenda1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(busag))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(agenda, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(88, 88, 88)
                            .addComponent(agenda1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(salir)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(horacmbx, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tercmbx, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta de citas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("EngraversGothic BT", 1, 24))); // NOI18N

        extraer.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        extraer.setText("Buscar");
        extraer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extraerActionPerformed(evt);
            }
        });

        agendar.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        agendar.setText("Revisar");
        agendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendarActionPerformed(evt);
            }
        });

        agentera1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE", "APELLIDOS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agentera1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agentera1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(agentera1);

        citastera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FOLIO", "PACIENTE", "TELEFONO", "HORA", "FECHA", "TERAPEUTA", "NOTAS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        citastera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                citasteraMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(citastera);

        agenda2.setBackground(new java.awt.Color(93, 183, 121));
        agenda2.setFont(new java.awt.Font("EngraversGothic BT", 1, 18)); // NOI18N

        terapeutatxt.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        terapeutatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terapeutatxtActionPerformed(evt);
            }
        });
        terapeutatxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                terapeutatxtKeyReleased(evt);
            }
        });

        horacmbx1.setFont(new java.awt.Font("Gautami", 1, 12)); // NOI18N
        horacmbx1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AGENDA GENERAL", "AGENDA POR TERAPEUTA" }));
        horacmbx1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                horacmbx1ItemStateChanged(evt);
            }
        });
        horacmbx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horacmbx1ActionPerformed(evt);
            }
        });

        eliminar.setFont(new java.awt.Font("EngraversGothic BT", 0, 18)); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agenda2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(agendar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(terapeutatxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(extraer))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(horacmbx1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(eliminar)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(extraer)
                            .addComponent(terapeutatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(horacmbx1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 97, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(agenda2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eliminar)
                            .addComponent(agendar))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("Datos de c");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void busagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busagActionPerformed
    if(!idter1.getText().isEmpty())
        {
            //((DefaultTableModel)tablaexp.getModel()).setRowCount(0);
            recepcionDAO  edao=new recepcionDAO();                 
            Collection<SetGetExp> consulta=edao.buscarExpaAsignar(Integer.parseInt(idter1.getText()));
            Iterator<SetGetExp> it=consulta.iterator();
            SetGetExp arreglo;
            DefaultTableModel tabla = (DefaultTableModel)tablaexp.getModel();
            tabla.setRowCount(0);
            while(it.hasNext()){
                arreglo=it.next();
                tabla.addRow(arreglo.toObjectArray2());
            }
            
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Debe de poner un numero de expediente",
                "Error de busqueda", JOptionPane.ERROR_MESSAGE);
        }
        //Agendar();
            
    }//GEN-LAST:event_busagActionPerformed

    private void agendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendarActionPerformed
    Revisar();         
    }//GEN-LAST:event_agendarActionPerformed

    private void idter1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idter1KeyTyped
        char tel=evt.getKeyChar();
        if((tel<'0' || tel>'9')) evt.consume();
    }//GEN-LAST:event_idter1KeyTyped

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        this.hide();
    }//GEN-LAST:event_salirActionPerformed

    private void agenda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agenda1ActionPerformed
        recepcionDAO rdao=new recepcionDAO();
        String ter=tercmbx.getSelectedItem().toString();
        
         if(tablaexp.getSelectedRow()>=0 || ter==null){
                        
            if(!rdao.verificarCita(horacmbx.getSelectedItem().toString(), new java.sql.Date(agenda.getDate().getTime())
                    ,Integer.parseInt(obtenerId(ter)
                    ))){
         try{                         
             SetGetAgenda cita = new SetGetAgenda();
             cita.setId_terapeuta(Integer.parseInt(obtenerId(ter)                    ));
             cita.setFecha(new java.sql.Date(agenda.getDate().getTime()));
             cita.setHora((String) horacmbx.getSelectedItem().toString());
             cita.setObservacion(ober.getText().toUpperCase());
             cita.setId_expediente(Integer.parseInt(tablaexp.getValueAt(tablaexp.getSelectedRow(), 1).toString()));
             Vector<SetGetAgenda> vector=new Vector<>();
             vector.add(cita);
             rdao.guardarAgenda(vector);
             JOptionPane.showMessageDialog(null, "Se ha agendado exitosamente");                          
             Revisar();
             ((DefaultTableModel)tablaexp.getModel()).setRowCount(0);             
             idter1.setText(null);
             horacmbx.setSelectedIndex(0);
             ober.setText(null); 
             
         }
         catch(Exception re){
             re.printStackTrace();
                JOptionPane.showMessageDialog(null,
                    "No se pudo conectar a la base de datos: " + re.getMessage(),
                    "Error al agendar",
                    JOptionPane.ERROR_MESSAGE);
            }
         }
             else{
                JOptionPane.showMessageDialog(null, "Ya hay una cita registrada a esa hora",
                    "Error al agendar", JOptionPane.ERROR_MESSAGE);
                }
        }
         else{
             JOptionPane.showMessageDialog(null, "Debe seleccionar un expediente",
                    "Error al agendar", JOptionPane.ERROR_MESSAGE);
         }
       
    }//GEN-LAST:event_agenda1ActionPerformed

    private void agentera1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agentera1MouseClicked
//        int z=-1;
//        z=agentera1.getSelectedRow();
//        if(z>=0){
//        tablaAgenda=(String)agentera1.getValueAt(z,0);
//        }
//        else{
//        JOptionPane.showMessageDialog(null,
//                    "Debe seleccionar un registro" ,
//                    "Error de seleccion",
//                    JOptionPane.ERROR_MESSAGE);
//    }
    
    }//GEN-LAST:event_agentera1MouseClicked

    private void citasteraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_citasteraMouseClicked
        String hora;
        if(citastera.getSelectedColumn()==3){
            String []opciones1={"8:30 AM","8:45 AM","9:00 AM","9:15 AM","9:30 AM","9:45 AM","10:00 AM","10:15 AM",
                "10:30 AM","10:45 AM","11:00 AM",
                "11:15 AM","11:30 AM","11:45 AM","12:00 PM","12:15 PM","12:30 PM","12:45 PM","1:00 PM","1:15 PM",
                "1:30 PM","1:45 PM","2:00 PM","2:15 PM","2:30 PM","2:45 PM","3:00 PM","3:15 PM","3:30 PM","3:45 PM",
                "4:00 PM","4:15 PM","4:30 PM","4:45 PM","5:00 PM", "5:15 PM", "5:30 PM", "5:45 PM", "6:00 PM"
               ,"6:15 PM", "6:30 PM", "6:45 PM", "7:00 PM", "7:15 PM", "7:30 PM"};
           hora=JOptionPane.showInputDialog(this,"Seleccione una hora","Horario",JOptionPane.PLAIN_MESSAGE,null,opciones1,"?").toString();
           citastera.setValueAt(hora, citastera.getSelectedRow(), 3);
           try{ 
                        recepcionDAO rdao=new recepcionDAO();
                        SetGetAgenda cita=new SetGetAgenda();
                                              
                        Vector<SetGetAgenda> vr = new Vector<>();
                        vr.add(cita);
                        cita.setHora(hora);
                        rdao.modificarAgenda(vr,Integer.parseInt(citastera.getValueAt(citastera.getSelectedRow(), 0).toString()));
                    }
                    catch(Exception re){
                        JOptionPane.showMessageDialog(null,
                        "No se pudo conectar a la base de datos: " + re.getMessage(),
                        "Error de conexion",
                        JOptionPane.ERROR_MESSAGE);
        }
        }                
        
    }//GEN-LAST:event_citasteraMouseClicked

    private void terapeutatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terapeutatxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terapeutatxtActionPerformed

    private void extraerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extraerActionPerformed
try{
            recepcionDAO rdao=new recepcionDAO();
            Collection<SetGetPcontacto> consulta=rdao.cargarTerapeutaaEnAgenda(terapeutatxt.getText().toUpperCase());
            Iterator<SetGetPcontacto> it=consulta.iterator();
            SetGetPcontacto arreglo;
            DefaultTableModel tabla = (DefaultTableModel)agentera1.getModel();
            tabla.setRowCount(0);
            while(it.hasNext()){
                arreglo=it.next();
                tabla.addRow(arreglo.toObjectArray4());
            }
        }catch(Exception re){
            JOptionPane.showMessageDialog(null,
                "No se pudo conectar a la base de datos: " + re.getMessage(),
                "Error de conexion",
                JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_extraerActionPerformed

    private void horacmbx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horacmbx1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horacmbx1ActionPerformed

    private void horacmbx1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_horacmbx1ItemStateChanged
        if(horacmbx1.getSelectedIndex()==0)
            terapeutatxt.setText(null);
            extraer.setEnabled(false);
            ((DefaultTableModel)agentera1.getModel()).setRowCount(0);
        if(horacmbx1.getSelectedIndex()==1)
            extraer.setEnabled(true);
        ((DefaultTableModel)agentera1.getModel()).setRowCount(0);
    }//GEN-LAST:event_horacmbx1ItemStateChanged
    
    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        if(citastera.getSelectedRow()>=0){
            int i=JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas eliminar esta cita?", "Eliminar cita", JOptionPane.YES_NO_OPTION);
        if (i==0){
        recepcionDAO ob=new recepcionDAO();
        ob.eliminarAgenda(Integer.parseInt(citastera.getValueAt(citastera.getSelectedRow(), 0).toString()));
        JOptionPane.showMessageDialog(null, "Se ha eliminado la cita exitosamente");
        Revisar();
        }
        }
        else{
            JOptionPane.showMessageDialog(null,
                "No ha seleccionado niguna cita",
                "Debe seleccionar una cita",
                JOptionPane.ERROR_MESSAGE);  
        }
        
    }//GEN-LAST:event_eliminarActionPerformed

    private void idter1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idter1KeyReleased
        char cTeclaPresionada=evt.getKeyChar();
       String aux=idter1.getText();
        idter1.setText(aux.toUpperCase());
       if(cTeclaPresionada==KeyEvent.VK_ENTER){           
            busag.doClick();
        }
    }//GEN-LAST:event_idter1KeyReleased

    private void terapeutatxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_terapeutatxtKeyReleased
        char cTeclaPresionada=evt.getKeyChar();
       String aux=terapeutatxt.getText();
        terapeutatxt.setText(aux.toUpperCase());
       if(cTeclaPresionada==KeyEvent.VK_ENTER){           
            extraer.doClick();
        }
        
    }//GEN-LAST:event_terapeutatxtKeyReleased

    private void tablaexpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaexpMouseClicked
        if(tablaexp.getSelectedRow()>=0)
        agenda1.setEnabled(true);
        if(tercmbx.getSelectedIndex()<0)
        revisarTer();
        
    }//GEN-LAST:event_tablaexpMouseClicked
    public String obtenerId(String cadena){
        String id="";
        int i=0;
        char[] caracteres =cadena.toCharArray();
        while(caracteres[i]!=' '){           
                id=id.concat(String.valueOf(caracteres[i]));
                i++;
        }
        System.out.print(id);
        return id; 
    }
    public void reagendar(){
        int id=(Integer)citastera.getValueAt(citastera.getSelectedRow(), 0);
        String observacion=(String)citastera.getValueAt(citastera.getSelectedRow(), 6);
        Date fechaLocal=null;
         try{
               java.sql.Date.valueOf(fechajt);
               fechaLocal=java.sql.Date.valueOf(fechajt);;
               try{             
            recepcionDAO rdao=new recepcionDAO();
             SetGetAgenda cita = new SetGetAgenda();
             cita.setObservacion(observacion);
             cita.setFecha(fechaLocal);
             cita.setHora(citastera.getValueAt(citastera.getSelectedRow(), 3).toString());
             Vector<SetGetAgenda> vector=new Vector<>();
             vector.add(cita);
             rdao.modificarAgenda(vector,id);
             JOptionPane.showMessageDialog(null, "Se ha modificado la cita exitosamente");           
         }
         catch(Exception re){
             re.printStackTrace();
                JOptionPane.showMessageDialog(null,
                    "No se pudo conectar a la base de datos: " + re.getMessage(),
                    "Error al agendar",
                    JOptionPane.ERROR_MESSAGE);
            }
            }catch(IllegalArgumentException ier){
                JOptionPane.showMessageDialog(null,
                "Error de formato de fecha",
                "El formato debe de ser 'YYYY-MM-DD'",
                JOptionPane.ERROR_MESSAGE);
            }
         Revisar();
    }
    public void Agendar(){
        
    }
    public void Revisar(){
        recepcionDAO  rdao=new recepcionDAO();         
        if(horacmbx1.getSelectedIndex()==0){
            Collection<SetGetAgenda> consulta=rdao.buscarAgendaGeneral(new java.sql.Date(agenda2.getDate().getTime()));
            Iterator<SetGetAgenda> it=consulta.iterator();
            SetGetAgenda arreglo;
            DefaultTableModel tabla = (DefaultTableModel)citastera.getModel();
            tabla.setRowCount(0);
            while(it.hasNext()){
                arreglo=it.next();
                tabla.addRow(arreglo.toObjectArray2());
        }
        }
        else{
            Collection<SetGetAgenda> consulta=rdao.buscarAgendaTerapeuta(new java.sql.Date(agenda2.getDate().getTime()),
                    Integer.parseInt(agentera1.getValueAt(agentera1.getSelectedRow(), 0).toString()));
            Iterator<SetGetAgenda> it=consulta.iterator();
            SetGetAgenda arreglo;
            DefaultTableModel tabla = (DefaultTableModel)citastera.getModel();
             tabla.setRowCount(0);
            while(it.hasNext()){
                arreglo=it.next();
                tabla.addRow(arreglo.toObjectArray2());
        }    
        }
    }
    public void revisarTer(){//llenar el combobox para de los terapeutas de un expedientes
        recepcionDAO  edao=new recepcionDAO();         
            Collection<SetGetExp> consulta=edao.buscarTerapeutasAsignados(Integer.parseInt(tablaexp.getValueAt(tablaexp.getSelectedRow(), 0).toString()));
            Iterator<SetGetExp> it=consulta.iterator();
            SetGetExp arreglo;
            DefaultComboBoxModel combo =(DefaultComboBoxModel)tercmbx.getModel();                   
            while(it.hasNext()){                
                arreglo=it.next();                               
                tercmbx.addItem(arreglo.toObjectArray3()[0]);                              
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new agenda().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar agenda;
    private javax.swing.JButton agenda1;
    private com.toedter.calendar.JCalendar agenda2;
    private javax.swing.JButton agendar;
    private javax.swing.JTable agentera1;
    private javax.swing.JButton busag;
    private javax.swing.JTable citastera;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton extraer;
    private javax.swing.JComboBox horacmbx;
    private javax.swing.JComboBox horacmbx1;
    private javax.swing.JTextField idter1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea ober;
    private javax.swing.JButton salir;
    private javax.swing.JTable tablaexp;
    private javax.swing.JTextField terapeutatxt;
    private javax.swing.JComboBox tercmbx;
    // End of variables declaration//GEN-END:variables
}
